name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash -l {0}

jobs:
  nb-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v2

      - name: Install nbdev
        run: pip install nbdev

      - name: Read all notebooks
        run: nbdev_read_nbs

      - name: Check if all notebooks are cleaned
        run: |
          echo "Check we are starting with clean git checkout"
          if [ -n "$(git status -uno -s)" ]; then echo "git status is not clean"; false; fi
          echo "Trying to strip out notebooks"
          nbdev_clean_nbs
          echo "Check that strip out was unnecessary"
          git status -s # display the status to see which nbs need cleaning up
          if [ -n "$(git status -uno -s)" ]; then echo -e "!!! Detected unstripped out notebooks\n!!!Remember to run nbdev_install_git_hooks"; false; fi

      - name: Check if there is no diff library/notebooks
        run: |
          if [ -n "$(nbdev_diff_nbs)" ]; then echo -e "!!! Detected difference between the notebooks and the library"; false; fi

  run-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]
    steps:
      - name: Clone repo
        uses: actions/checkout@v2

      - name: Set up environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          mamba-version: 0.7.14
          channels: conda-forge
          activate-environment: mlforecast
          environment-file: environment.yml

      - name: Install the library
        run: pip install ./

      - name: Run all tests
        if: matrix.os == 'ubuntu-latest'
        run: nbdev_test --n_workers 1 --flags distributed

      - name: Run local tests
        if: matrix.os != 'ubuntu-latest'
        run: nbdev_test

  test-distributed-extra:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install library with extra
        run: pip install ".[distributed]" pyarrow scikit-learn xgboost nbdev

      - name: Run test
        run: |
          nbdev_test --fname nbs/distributed.forecast.ipynb --flags distributed
