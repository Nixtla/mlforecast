name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-all-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_NIXTLA_TMP }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_NIXTLA_TMP }}
    steps:
      - name: Clone repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up environment
        uses: mamba-org/setup-micromamba@f8b8a1e23a26f60a44c853292711bacfd3eac822 # v1.9.0
        with:
          environment-file: environment.yml
          create-args: python=${{ matrix.python-version }}
          cache-environment: true

      - name: Install the library
        run: pip install ./

      - name: Run all tests
        run: nbdev_test --n_workers 0 --do_print --timing --skip_file_glob 'electricity' --flags 'polars'

  run-macos-tests:
    runs-on: macos-13
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Clone repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up environment
        uses: mamba-org/setup-micromamba@f8b8a1e23a26f60a44c853292711bacfd3eac822 # v1.9.0
        with:
          environment-file: local_environment.yml
          create-args: python=${{ matrix.python-version }}
          cache-environment: true

      - name: Install the library
        run: pip install ./

      - name: Run local tests
        run: nbdev_test --n_workers 0 --do_print --timing --skip_file_glob "*(distributed|electricity)*" --flags 'polars'

  run-windows-tests:
    runs-on: windows-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Clone repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up environment
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # 5.1.1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the library
        run: pip install uv && uv pip install ".[dev]" --system

      - name: Run local tests
        run: nbdev_test --n_workers 0 --do_print --timing --skip_file_glob "(distributed|electricity)" --flags 'polars'

  check-deps:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # 5.1.1
        with:
          python-version: '3.10' 
          cache: 'pip'

      - name: Install forecast notebook dependencies
        run: pip install . datasetsforecast lightgbm matplotlib nbdev xgboost

      - name: Run forecast notebook
        run: nbdev_test --path nbs/forecast.ipynb

  efficiency-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # 5.1.1
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: pip install . pytest pytest-benchmark

      - name: Run efficiency tests
        run: pytest tests/test_pipeline.py --benchmark-group-by=func --benchmark-sort=fullname

  performance-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # 5.1.1
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: pip install . datasetsforecast lightgbm pytest

      - name: Run m4 performance tests
        run: pytest tests/test_m4.py
