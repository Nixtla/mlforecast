name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-all-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_NIXTLA_TMP }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_NIXTLA_TMP }}
    steps:
      - name: Clone repo
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Set up environment
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # 5.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the library
        run: pip install uv && uv pip install --system ".[all]"

      - name: Run all tests
        run: nbdev_test --n_workers 0 --do_print --timing --skip_file_re 'electricity' --flags 'polars'

  run-local-tests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Clone repo
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Set up environment
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # 5.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the library
        run: pip install uv && uv pip install --system ".[dev]"

      - name: Install OpenMP
        if: startsWith(matrix.os, 'macos')
        run: brew install libomp

      - name: Run local tests
        run: nbdev_test --n_workers 0 --do_print --timing --skip_file_re "(distributed|electricity)" --flags 'polars'

  check-deps:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Set up python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # 5.2.0
        with:
          python-version: "3.10"

      - name: Install forecast notebook dependencies
        run: pip install uv && uv pip install --system . datasetsforecast lightgbm matplotlib nbdev xgboost

      - name: Run forecast notebook
        run: nbdev_test --path nbs/forecast.ipynb

  efficiency-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # 5.2.0
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install uv && uv pip install --system . pytest-codspeed pytest-xdist

      - name: Run benchmarks
        uses: CodSpeedHQ/action@b587655f756aab640e742fec141261bc6f0a569d # 3.0.1
        with:
          token: ${{ secrets.CODESPEED_TOKEN }}
          run: pytest tests/test_pipeline.py --codspeed -n 2

  performance-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # 5.2.0
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install uv && uv pip install --system . datasetsforecast lightgbm pytest

      - name: Run m4 performance tests
        run: pytest tests/test_m4.py
