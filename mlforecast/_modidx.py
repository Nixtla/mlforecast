# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/',
                'doc_host': 'https://Nixtla.github.io',
                'git_url': 'https://github.com/Nixtla/mlforecast',
                'lib_path': 'mlforecast'},
  'syms': { 'mlforecast.core': { 'mlforecast.core.GroupedArray': ('core.html#groupedarray', 'mlforecast/core.py'),
                                 'mlforecast.core.GroupedArray.__getitem__': ('core.html#groupedarray.__getitem__', 'mlforecast/core.py'),
                                 'mlforecast.core.GroupedArray.__init__': ('core.html#groupedarray.__init__', 'mlforecast/core.py'),
                                 'mlforecast.core.GroupedArray.__len__': ('core.html#groupedarray.__len__', 'mlforecast/core.py'),
                                 'mlforecast.core.GroupedArray.__repr__': ('core.html#groupedarray.__repr__', 'mlforecast/core.py'),
                                 'mlforecast.core.GroupedArray.__setitem__': ('core.html#groupedarray.__setitem__', 'mlforecast/core.py'),
                                 'mlforecast.core.GroupedArray.append': ('core.html#groupedarray.append', 'mlforecast/core.py'),
                                 'mlforecast.core.GroupedArray.expand_target': ( 'core.html#groupedarray.expand_target',
                                                                                 'mlforecast/core.py'),
                                 'mlforecast.core.GroupedArray.from_sorted_df': ( 'core.html#groupedarray.from_sorted_df',
                                                                                  'mlforecast/core.py'),
                                 'mlforecast.core.GroupedArray.restore_difference': ( 'core.html#groupedarray.restore_difference',
                                                                                      'mlforecast/core.py'),
                                 'mlforecast.core.GroupedArray.take_from_groups': ( 'core.html#groupedarray.take_from_groups',
                                                                                    'mlforecast/core.py'),
                                 'mlforecast.core.GroupedArray.transform_series': ( 'core.html#groupedarray.transform_series',
                                                                                    'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries': ('core.html#timeseries', 'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries.__init__': ('core.html#timeseries.__init__', 'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries.__repr__': ('core.html#timeseries.__repr__', 'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._apply_multithreaded_transforms': ( 'core.html#timeseries._apply_multithreaded_transforms',
                                                                                                 'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._apply_transforms': ( 'core.html#timeseries._apply_transforms',
                                                                                   'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._compute_date_feature': ( 'core.html#timeseries._compute_date_feature',
                                                                                       'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._compute_transforms': ( 'core.html#timeseries._compute_transforms',
                                                                                     'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._date_feature_names': ( 'core.html#timeseries._date_feature_names',
                                                                                     'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._fit': ('core.html#timeseries._fit', 'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._get_features_for_next_step': ( 'core.html#timeseries._get_features_for_next_step',
                                                                                             'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._get_predictions': ( 'core.html#timeseries._get_predictions',
                                                                                  'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._get_raw_predictions': ( 'core.html#timeseries._get_raw_predictions',
                                                                                      'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._predict_multi': ('core.html#timeseries._predict_multi', 'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._predict_recursive': ( 'core.html#timeseries._predict_recursive',
                                                                                    'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._predict_setup': ('core.html#timeseries._predict_setup', 'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._restore_differences': ( 'core.html#timeseries._restore_differences',
                                                                                      'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._transform': ('core.html#timeseries._transform', 'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._update_features': ( 'core.html#timeseries._update_features',
                                                                                  'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries._update_y': ('core.html#timeseries._update_y', 'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries.features': ('core.html#timeseries.features', 'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries.fit_transform': ('core.html#timeseries.fit_transform', 'mlforecast/core.py'),
                                 'mlforecast.core.TimeSeries.predict': ('core.html#timeseries.predict', 'mlforecast/core.py'),
                                 'mlforecast.core._append_new': ('core.html#_append_new', 'mlforecast/core.py'),
                                 'mlforecast.core._apply_difference': ('core.html#_apply_difference', 'mlforecast/core.py'),
                                 'mlforecast.core._as_tuple': ('core.html#_as_tuple', 'mlforecast/core.py'),
                                 'mlforecast.core._build_transform_name': ('core.html#_build_transform_name', 'mlforecast/core.py'),
                                 'mlforecast.core._diff': ('core.html#_diff', 'mlforecast/core.py'),
                                 'mlforecast.core._expand_target': ('core.html#_expand_target', 'mlforecast/core.py'),
                                 'mlforecast.core._identity': ('core.html#_identity', 'mlforecast/core.py'),
                                 'mlforecast.core._name_models': ('core.html#_name_models', 'mlforecast/core.py'),
                                 'mlforecast.core._restore_difference': ('core.html#_restore_difference', 'mlforecast/core.py'),
                                 'mlforecast.core._transform_series': ('core.html#_transform_series', 'mlforecast/core.py')},
            'mlforecast.distributed.forecast': { 'mlforecast.distributed.forecast.DistributedMLForecast': ( 'distributed.forecast.html#distributedmlforecast',
                                                                                                            'mlforecast/distributed/forecast.py'),
                                                 'mlforecast.distributed.forecast.DistributedMLForecast.__init__': ( 'distributed.forecast.html#distributedmlforecast.__init__',
                                                                                                                     'mlforecast/distributed/forecast.py'),
                                                 'mlforecast.distributed.forecast.DistributedMLForecast.__repr__': ( 'distributed.forecast.html#distributedmlforecast.__repr__',
                                                                                                                     'mlforecast/distributed/forecast.py'),
                                                 'mlforecast.distributed.forecast.DistributedMLForecast._fit': ( 'distributed.forecast.html#distributedmlforecast._fit',
                                                                                                                 'mlforecast/distributed/forecast.py'),
                                                 'mlforecast.distributed.forecast.DistributedMLForecast._get_predict_schema': ( 'distributed.forecast.html#distributedmlforecast._get_predict_schema',
                                                                                                                                'mlforecast/distributed/forecast.py'),
                                                 'mlforecast.distributed.forecast.DistributedMLForecast._predict': ( 'distributed.forecast.html#distributedmlforecast._predict',
                                                                                                                     'mlforecast/distributed/forecast.py'),
                                                 'mlforecast.distributed.forecast.DistributedMLForecast._preprocess': ( 'distributed.forecast.html#distributedmlforecast._preprocess',
                                                                                                                        'mlforecast/distributed/forecast.py'),
                                                 'mlforecast.distributed.forecast.DistributedMLForecast._preprocess_partition': ( 'distributed.forecast.html#distributedmlforecast._preprocess_partition',
                                                                                                                                  'mlforecast/distributed/forecast.py'),
                                                 'mlforecast.distributed.forecast.DistributedMLForecast._preprocess_partitions': ( 'distributed.forecast.html#distributedmlforecast._preprocess_partitions',
                                                                                                                                   'mlforecast/distributed/forecast.py'),
                                                 'mlforecast.distributed.forecast.DistributedMLForecast._retrieve_df': ( 'distributed.forecast.html#distributedmlforecast._retrieve_df',
                                                                                                                         'mlforecast/distributed/forecast.py'),
                                                 'mlforecast.distributed.forecast.DistributedMLForecast.cross_validation': ( 'distributed.forecast.html#distributedmlforecast.cross_validation',
                                                                                                                             'mlforecast/distributed/forecast.py'),
                                                 'mlforecast.distributed.forecast.DistributedMLForecast.fit': ( 'distributed.forecast.html#distributedmlforecast.fit',
                                                                                                                'mlforecast/distributed/forecast.py'),
                                                 'mlforecast.distributed.forecast.DistributedMLForecast.predict': ( 'distributed.forecast.html#distributedmlforecast.predict',
                                                                                                                    'mlforecast/distributed/forecast.py'),
                                                 'mlforecast.distributed.forecast.DistributedMLForecast.preprocess': ( 'distributed.forecast.html#distributedmlforecast.preprocess',
                                                                                                                       'mlforecast/distributed/forecast.py')},
            'mlforecast.distributed.fugue': { 'mlforecast.distributed.fugue.FugueMLForecast': ( 'distributed.fugue.html#fuguemlforecast',
                                                                                                'mlforecast/distributed/fugue.py'),
                                              'mlforecast.distributed.fugue.FugueMLForecast.__init__': ( 'distributed.fugue.html#fuguemlforecast.__init__',
                                                                                                         'mlforecast/distributed/fugue.py'),
                                              'mlforecast.distributed.fugue.FugueMLForecast.__repr__': ( 'distributed.fugue.html#fuguemlforecast.__repr__',
                                                                                                         'mlforecast/distributed/fugue.py'),
                                              'mlforecast.distributed.fugue.FugueMLForecast._fit': ( 'distributed.fugue.html#fuguemlforecast._fit',
                                                                                                     'mlforecast/distributed/fugue.py'),
                                              'mlforecast.distributed.fugue.FugueMLForecast._predict': ( 'distributed.fugue.html#fuguemlforecast._predict',
                                                                                                         'mlforecast/distributed/fugue.py'),
                                              'mlforecast.distributed.fugue.FugueMLForecast._preprocess': ( 'distributed.fugue.html#fuguemlforecast._preprocess',
                                                                                                            'mlforecast/distributed/fugue.py'),
                                              'mlforecast.distributed.fugue.FugueMLForecast._preprocess_partition': ( 'distributed.fugue.html#fuguemlforecast._preprocess_partition',
                                                                                                                      'mlforecast/distributed/fugue.py'),
                                              'mlforecast.distributed.fugue.FugueMLForecast._retrieve_df': ( 'distributed.fugue.html#fuguemlforecast._retrieve_df',
                                                                                                             'mlforecast/distributed/fugue.py'),
                                              'mlforecast.distributed.fugue.FugueMLForecast.cross_validation': ( 'distributed.fugue.html#fuguemlforecast.cross_validation',
                                                                                                                 'mlforecast/distributed/fugue.py'),
                                              'mlforecast.distributed.fugue.FugueMLForecast.fit': ( 'distributed.fugue.html#fuguemlforecast.fit',
                                                                                                    'mlforecast/distributed/fugue.py'),
                                              'mlforecast.distributed.fugue.FugueMLForecast.predict': ( 'distributed.fugue.html#fuguemlforecast.predict',
                                                                                                        'mlforecast/distributed/fugue.py'),
                                              'mlforecast.distributed.fugue.FugueMLForecast.preprocess': ( 'distributed.fugue.html#fuguemlforecast.preprocess',
                                                                                                           'mlforecast/distributed/fugue.py')},
            'mlforecast.distributed.models.lgb': { 'mlforecast.distributed.models.lgb.LGBMForecast': ( 'distributed.models.lgb.html#lgbmforecast',
                                                                                                       'mlforecast/distributed/models/lgb.py'),
                                                   'mlforecast.distributed.models.lgb.LGBMForecast.model_': ( 'distributed.models.lgb.html#lgbmforecast.model_',
                                                                                                              'mlforecast/distributed/models/lgb.py')},
            'mlforecast.distributed.models.xgb': { 'mlforecast.distributed.models.xgb.XGBForecast': ( 'distributed.models.xgb.html#xgbforecast',
                                                                                                      'mlforecast/distributed/models/xgb.py'),
                                                   'mlforecast.distributed.models.xgb.XGBForecast.model_': ( 'distributed.models.xgb.html#xgbforecast.model_',
                                                                                                             'mlforecast/distributed/models/xgb.py')},
            'mlforecast.forecast': { 'mlforecast.forecast.Forecast': ('forecast.html#forecast', 'mlforecast/forecast.py'),
                                     'mlforecast.forecast.Forecast.__init__': ('forecast.html#forecast.__init__', 'mlforecast/forecast.py'),
                                     'mlforecast.forecast.MLForecast': ('forecast.html#mlforecast', 'mlforecast/forecast.py'),
                                     'mlforecast.forecast.MLForecast.__init__': ( 'forecast.html#mlforecast.__init__',
                                                                                  'mlforecast/forecast.py'),
                                     'mlforecast.forecast.MLForecast.__repr__': ( 'forecast.html#mlforecast.__repr__',
                                                                                  'mlforecast/forecast.py'),
                                     'mlforecast.forecast.MLForecast._conformity_scores': ( 'forecast.html#mlforecast._conformity_scores',
                                                                                            'mlforecast/forecast.py'),
                                     'mlforecast.forecast.MLForecast.cross_validation': ( 'forecast.html#mlforecast.cross_validation',
                                                                                          'mlforecast/forecast.py'),
                                     'mlforecast.forecast.MLForecast.fit': ('forecast.html#mlforecast.fit', 'mlforecast/forecast.py'),
                                     'mlforecast.forecast.MLForecast.fit_models': ( 'forecast.html#mlforecast.fit_models',
                                                                                    'mlforecast/forecast.py'),
                                     'mlforecast.forecast.MLForecast.freq': ('forecast.html#mlforecast.freq', 'mlforecast/forecast.py'),
                                     'mlforecast.forecast.MLForecast.from_cv': ( 'forecast.html#mlforecast.from_cv',
                                                                                 'mlforecast/forecast.py'),
                                     'mlforecast.forecast.MLForecast.predict': ( 'forecast.html#mlforecast.predict',
                                                                                 'mlforecast/forecast.py'),
                                     'mlforecast.forecast.MLForecast.preprocess': ( 'forecast.html#mlforecast.preprocess',
                                                                                    'mlforecast/forecast.py'),
                                     'mlforecast.forecast._add_conformal_distribution_intervals': ( 'forecast.html#_add_conformal_distribution_intervals',
                                                                                                    'mlforecast/forecast.py'),
                                     'mlforecast.forecast._add_conformal_error_intervals': ( 'forecast.html#_add_conformal_error_intervals',
                                                                                             'mlforecast/forecast.py'),
                                     'mlforecast.forecast._get_conformal_method': ( 'forecast.html#_get_conformal_method',
                                                                                    'mlforecast/forecast.py')},
            'mlforecast.lgb_cv': { 'mlforecast.lgb_cv.LightGBMCV': ('lgb_cv.html#lightgbmcv', 'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv.LightGBMCV.__init__': ('lgb_cv.html#lightgbmcv.__init__', 'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv.LightGBMCV.__repr__': ('lgb_cv.html#lightgbmcv.__repr__', 'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv.LightGBMCV._multithreaded_partial_fit': ( 'lgb_cv.html#lightgbmcv._multithreaded_partial_fit',
                                                                                                'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv.LightGBMCV._single_threaded_partial_fit': ( 'lgb_cv.html#lightgbmcv._single_threaded_partial_fit',
                                                                                                  'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv.LightGBMCV.find_best_iter': ( 'lgb_cv.html#lightgbmcv.find_best_iter',
                                                                                    'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv.LightGBMCV.fit': ('lgb_cv.html#lightgbmcv.fit', 'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv.LightGBMCV.partial_fit': ( 'lgb_cv.html#lightgbmcv.partial_fit',
                                                                                 'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv.LightGBMCV.predict': ('lgb_cv.html#lightgbmcv.predict', 'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv.LightGBMCV.setup': ('lgb_cv.html#lightgbmcv.setup', 'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv.LightGBMCV.should_stop': ( 'lgb_cv.html#lightgbmcv.should_stop',
                                                                                 'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv._mape': ('lgb_cv.html#_mape', 'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv._predict': ('lgb_cv.html#_predict', 'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv._rmse': ('lgb_cv.html#_rmse', 'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv._update': ('lgb_cv.html#_update', 'mlforecast/lgb_cv.py'),
                                   'mlforecast.lgb_cv._update_and_predict': ('lgb_cv.html#_update_and_predict', 'mlforecast/lgb_cv.py')},
            'mlforecast.utils': { 'mlforecast.utils.PredictionIntervals': ('utils.html#predictionintervals', 'mlforecast/utils.py'),
                                  'mlforecast.utils.PredictionIntervals.__init__': ( 'utils.html#predictionintervals.__init__',
                                                                                     'mlforecast/utils.py'),
                                  'mlforecast.utils.PredictionIntervals.__post_init__': ( 'utils.html#predictionintervals.__post_init__',
                                                                                          'mlforecast/utils.py'),
                                  'mlforecast.utils.backtest_splits': ('utils.html#backtest_splits', 'mlforecast/utils.py'),
                                  'mlforecast.utils.generate_daily_series': ('utils.html#generate_daily_series', 'mlforecast/utils.py'),
                                  'mlforecast.utils.generate_prices_for_series': ( 'utils.html#generate_prices_for_series',
                                                                                   'mlforecast/utils.py')}}}
