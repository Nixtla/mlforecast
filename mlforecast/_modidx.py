# Autogenerated by nbdev

d = { 'settings': { 'allowed_cell_metadata_keys': '',
                'allowed_metadata_keys': '',
                'audience': 'Developers',
                'author': 'Jos√© Morales',
                'author_email': 'jmoralz92@gmail.com',
                'black_formatting': 'True',
                'branch': 'main',
                'clean_ids': 'True',
                'copyright': 'Nixtla',
                'custom_sidebar': 'True',
                'description': 'Scalable machine learning based time series forecasting',
                'dev_requirements': 'flake8 lightgbm matplotlib mypy nbdev xgboost',
                'distributed_requirements': 'dask[complete]',
                'doc_baseurl': '/mlforecast/',
                'doc_host': 'https://Nixtla.github.io',
                'doc_path': '_docs',
                'git_url': 'https://github.com/Nixtla/mlforecast/tree/main/',
                'host': 'github',
                'jupyter_hooks': 'True',
                'keywords': 'python forecast forecasting machine-learning dask',
                'language': 'English',
                'lib_name': 'mlforecast',
                'lib_path': 'mlforecast',
                'license': 'apache2',
                'min_python': '3.6',
                'nbs_path': 'nbs',
                'readme_nb': 'index.ipynb',
                'recursive': 'False',
                'requirements': 'numba pandas window-ops',
                'status': '3',
                'title': 'mlforecast',
                'tst_flags': '',
                'user': 'Nixtla',
                'version': '0.2.0'},
  'syms': { 'mlforecast.compat': {'mlforecast.compat.Frame': 'https://Nixtla.github.io/mlforecast/compat.html#frame'},
            'mlforecast.core': { 'mlforecast.core.TimeSeries': 'https://Nixtla.github.io/mlforecast/core.html#timeseries',
                                 'mlforecast.core.TimeSeries.features': 'https://Nixtla.github.io/mlforecast/core.html#timeseries.features',
                                 'mlforecast.core.TimeSeries.fit_transform': 'https://Nixtla.github.io/mlforecast/core.html#timeseries.fit_transform',
                                 'mlforecast.core.TimeSeries.predict': 'https://Nixtla.github.io/mlforecast/core.html#timeseries.predict',
                                 'mlforecast.core.merge_predict': 'https://Nixtla.github.io/mlforecast/core.html#merge_predict',
                                 'mlforecast.core.simple_predict': 'https://Nixtla.github.io/mlforecast/core.html#simple_predict'},
            'mlforecast.distributed.core': { 'mlforecast.distributed.core.DistributedTimeSeries': 'https://Nixtla.github.io/mlforecast/distributed.core.html#distributedtimeseries',
                                             'mlforecast.distributed.core.DistributedTimeSeries.fit_transform': 'https://Nixtla.github.io/mlforecast/distributed.core.html#distributedtimeseries.fit_transform',
                                             'mlforecast.distributed.core.DistributedTimeSeries.predict': 'https://Nixtla.github.io/mlforecast/distributed.core.html#distributedtimeseries.predict'},
            'mlforecast.distributed.forecast': { 'mlforecast.distributed.forecast.DistributedForecast': 'https://Nixtla.github.io/mlforecast/distributed.forecast.html#distributedforecast',
                                                 'mlforecast.distributed.forecast.DistributedForecast.fit': 'https://Nixtla.github.io/mlforecast/distributed.forecast.html#distributedforecast.fit',
                                                 'mlforecast.distributed.forecast.DistributedForecast.predict': 'https://Nixtla.github.io/mlforecast/distributed.forecast.html#distributedforecast.predict',
                                                 'mlforecast.distributed.forecast.DistributedForecast.preprocess': 'https://Nixtla.github.io/mlforecast/distributed.forecast.html#distributedforecast.preprocess'},
            'mlforecast.distributed.models.lgb': { 'mlforecast.distributed.models.lgb.LGBMForecast': 'https://Nixtla.github.io/mlforecast/distributed.models.lgb.html#lgbmforecast',
                                                   'mlforecast.distributed.models.lgb.LGBMForecast.model_': 'https://Nixtla.github.io/mlforecast/distributed.models.lgb.html#lgbmforecast.model_'},
            'mlforecast.distributed.models.xgb': { 'mlforecast.distributed.models.xgb.XGBForecast': 'https://Nixtla.github.io/mlforecast/distributed.models.xgb.html#xgbforecast',
                                                   'mlforecast.distributed.models.xgb.XGBForecast.model_': 'https://Nixtla.github.io/mlforecast/distributed.models.xgb.html#xgbforecast.model_'},
            'mlforecast.forecast': { 'mlforecast.forecast.Forecast': 'https://Nixtla.github.io/mlforecast/forecast.html#forecast',
                                     'mlforecast.forecast.Forecast.backtest': 'https://Nixtla.github.io/mlforecast/forecast.html#forecast.backtest',
                                     'mlforecast.forecast.Forecast.fit': 'https://Nixtla.github.io/mlforecast/forecast.html#forecast.fit',
                                     'mlforecast.forecast.Forecast.predict': 'https://Nixtla.github.io/mlforecast/forecast.html#forecast.predict',
                                     'mlforecast.forecast.Forecast.preprocess': 'https://Nixtla.github.io/mlforecast/forecast.html#forecast.preprocess'},
            'mlforecast.utils': { 'mlforecast.utils.backtest_splits': 'https://Nixtla.github.io/mlforecast/utils.html#backtest_splits',
                                  'mlforecast.utils.data_indptr_from_sorted_df': 'https://Nixtla.github.io/mlforecast/utils.html#data_indptr_from_sorted_df',
                                  'mlforecast.utils.ensure_sorted': 'https://Nixtla.github.io/mlforecast/utils.html#ensure_sorted',
                                  'mlforecast.utils.generate_daily_series': 'https://Nixtla.github.io/mlforecast/utils.html#generate_daily_series',
                                  'mlforecast.utils.generate_prices_for_series': 'https://Nixtla.github.io/mlforecast/utils.html#generate_prices_for_series'}}}